{
    "sourceFile": "build/config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1643430218880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1643430218880,
            "name": "Commit-0",
            "content": "/**\n * webpack 公共配置，比如 externals、alias\n */\nvar path = require('path')\nvar fs = require('fs')\nvar nodeExternals = require('webpack-node-externals')\nvar Components = require('../components.json')\n\nvar utilsList = fs.readdirSync(path.resolve(__dirname, '../src/utils'))\nvar mixinsList = fs.readdirSync(path.resolve(__dirname, '../src/mixins'))\nvar transitionList = fs.readdirSync(path.resolve(__dirname, '../src/transitions'))\n/**\n * externals 解决组件依赖其它组件并按需引入时代码冗余的问题\n *     比如 Table 组件依赖 Checkbox 组件，在项目中如果我同时引入 Table 和 Checkbox 时，会不会产生冗余代码 ?\n *     如果没有以下内容的的话，会，这时候你会看到有两份 Checkbox 组件代码。\n *     包括 locale、utils、mixins、transitions 这些公共内容，也会出现冗余代码\n *     但有了 externals 的设置，就会将告诉 webpack 不需要将这些 import 的包打包到 bundle 中，运行时从外部获去\n *     获取这些扩展依赖。这样就可以在打包后 /lib/tables.js 中看到编译后的 table.js 对 Checkbox 组件的依赖引入：\n *     module.exports = require(\"element-ui/lib/checkbox\")\n *     这么处理之后就不会出现冗余的 JS 代码，但是对于 CSS 部分，element-ui 并未处理冗余情况。\n *     可以看到 /lib/theme-chalk/table.css 和 /lib/theme-chalk/checkbox.css 中都有 Checkbox 组件的样式\n */\nvar externals = {}\n\nObject.keys(Components).forEach(function (key) {\n    externals[`element-ui/packages/${key}`] = `element-ui/lib/${key}`\n})\n\nexternals['element-ui/src/locale'] = 'element-ui/lib/locale'\nutilsList.forEach(function (file) {\n    file = path.basename(file, '.js')\n    externals[`element-ui/src/utils/${file}`] = `element-ui/lib/utils/${file}`\n})\nmixinsList.forEach(function (file) {\n    file = path.basename(file, '.js')\n    externals[`element-ui/src/mixins/${file}`] = `element-ui/lib/mixins/${file}`\n})\ntransitionList.forEach(function (file) {\n    file = path.basename(file, '.js')\n    externals[`element-ui/src/transitions/${file}`] = `element-ui/lib/transitions/${file}`\n})\n\nexternals = [\n    Object.assign(\n        {\n            vue: 'vue'\n        },\n        externals\n    ),\n    nodeExternals()\n]\n\nexports.externals = externals\n\n// 设置别名，方便使用\nexports.alias = {\n    main: path.resolve(__dirname, '../src'),\n    packages: path.resolve(__dirname, '../packages'),\n    examples: path.resolve(__dirname, '../examples'),\n    'element-ui': path.resolve(__dirname, '../')\n}\n\nexports.vue = {\n    root: 'Vue',\n    commonjs: 'vue',\n    commonjs2: 'vue',\n    amd: 'vue'\n}\n\nexports.jsexclude = /node_modules|utils\\/popper\\.js|utils\\/date\\.js/\n"
        }
    ]
}