{
    "sourceFile": "build/webpack.demo.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1643364643563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1643364643563,
            "name": "Commit-0",
            "content": "const path = require('path')\nconst webpack = require('webpack')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ProgressBarPlugin = require('progress-bar-webpack-plugin')\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin')\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin')\n\nconst config = require('./config')\n\nconst isProd = process.env.NODE_ENV === 'production'\nconst isPlay = !!process.env.PLAY_ENV\n\nconst webpackConfig = {\n    mode: process.env.NODE_ENV,\n    entry: isProd\n        ? {\n              docs: './examples/entry.js'\n          }\n        : isPlay\n        ? './examples/play.js'\n        : './examples/entry.js',\n    output: {\n        path: path.resolve(process.cwd(), './examples/element-ui/'),\n        publicPath: process.env.CI_ENV || '',\n        filename: '[name].[hash:7].js',\n        chunkFilename: isProd ? '[name].[hash:7].js' : '[name].js'\n    },\n    resolve: {\n        extensions: ['.js', '.vue', '.json'],\n        alias: config.alias,\n        modules: ['node_modules']\n    },\n    devServer: {\n        host: '0.0.0.0',\n        port: 8085,\n        publicPath: '/',\n        hot: true\n    },\n    performance: {\n        hints: false\n    },\n    stats: {\n        children: false\n    },\n    module: {\n        rules: [\n            {\n                enforce: 'pre',\n                test: /\\.(vue|jsx?)$/,\n                exclude: /node_modules/,\n                loader: 'eslint-loader'\n            },\n            {\n                test: /\\.(jsx?|babel|es6)$/,\n                include: process.cwd(),\n                exclude: config.jsexclude,\n                loader: 'babel-loader'\n            },\n            {\n                test: /\\.vue$/,\n                loader: 'vue-loader',\n                options: {\n                    compilerOptions: {\n                        preserveWhitespace: false\n                    }\n                }\n            },\n            {\n                test: /\\.(scss|css)$/,\n                use: [isProd ? MiniCssExtractPlugin.loader : 'style-loader', 'css-loader', 'sass-loader']\n            },\n            // 对 markdow（.md) 规则的处理，先通过 md-loader 处理 markdown 文件，从中解析出 vue 代码，然后交给 vue-loader，最终生成 sfc（vue 单文件组件）渲染到页面。这就能看到组件页面的文档 + 组件 demo 展示效果。\n            {\n                test: /\\.md$/,\n                use: [\n                    {\n                        loader: 'vue-loader',\n                        options: {\n                            compilerOptions: {\n                                preserveWhitespace: false\n                            }\n                        }\n                    },\n                    {\n                        loader: path.resolve(__dirname, './md-loader/index.js')\n                    }\n                ]\n            },\n            {\n                test: /\\.(svg|otf|ttf|woff2?|eot|gif|png|jpe?g)(\\?\\S*)?$/,\n                loader: 'url-loader',\n                // todo: 这种写法有待调整\n                query: {\n                    limit: 10000,\n                    name: path.posix.join('static', '[name].[hash:7].[ext]')\n                }\n            }\n        ]\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(),\n        new HtmlWebpackPlugin({\n            template: './examples/index.tpl',\n            filename: './index.html',\n            favicon: './examples/favicon.ico'\n        }),\n        new CopyWebpackPlugin([{ from: 'examples/versions.json' }]),\n        new ProgressBarPlugin(),\n        new VueLoaderPlugin(),\n        new webpack.DefinePlugin({\n            'process.env.FAAS_ENV': JSON.stringify(process.env.FAAS_ENV)\n        }),\n        new webpack.LoaderOptionsPlugin({\n            vue: {\n                compilerOptions: {\n                    preserveWhitespace: false\n                }\n            }\n        })\n    ],\n    optimization: {\n        minimizer: []\n    },\n    devtool: '#eval-source-map'\n}\n\nif (isProd) {\n    webpackConfig.externals = {\n        vue: 'Vue',\n        'vue-router': 'VueRouter',\n        'highlight.js': 'hljs'\n    }\n    webpackConfig.plugins.push(\n        new MiniCssExtractPlugin({\n            filename: '[name].[contenthash:7].css'\n        })\n    )\n    webpackConfig.optimization.minimizer.push(\n        new UglifyJsPlugin({\n            cache: true,\n            parallel: true,\n            sourceMap: false\n        }),\n        new OptimizeCSSAssetsPlugin({})\n    )\n    // https://webpack.js.org/configuration/optimization/#optimizationsplitchunks\n    webpackConfig.optimization.splitChunks = {\n        cacheGroups: {\n            vendor: {\n                test: /\\/src\\//,\n                name: 'element-ui',\n                chunks: 'all'\n            }\n        }\n    }\n    webpackConfig.devtool = false\n}\n\nmodule.exports = webpackConfig\n"
        }
    ]
}